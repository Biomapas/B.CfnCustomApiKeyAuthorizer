{
  "Resources": {
    "ApiFunctionServiceRole52B9747B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LaimonasAuthorizerTestingStack/AuthorizedEndpointStack/ApiFunction/ServiceRole/Resource"
      }
    },
    "ApiFunctionCE271BD4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "def handler(event, context):\n    print(event)\n    return {\n        \"statusCode\": 200,\n        \"headers\": {},\n        \"body\": \"Hello World!\",\n        \"isBase64Encoded\": False    }"
        },
        "Role": {
          "Fn::GetAtt": [
            "ApiFunctionServiceRole52B9747B",
            "Arn"
          ]
        },
        "FunctionName": "LaimonasAuthorizerApiFunction",
        "Handler": "index.handler",
        "MemorySize": 128,
        "Runtime": "python3.7",
        "Timeout": 30
      },
      "DependsOn": [
        "ApiFunctionServiceRole52B9747B"
      ],
      "Metadata": {
        "aws:cdk:path": "LaimonasAuthorizerTestingStack/AuthorizedEndpointStack/ApiFunction/Resource"
      }
    },
    "LaimonasAuthorizerInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ApiFunctionCE271BD4"
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "LaimonasAuthorizerTestingStack/AuthorizedEndpointStack/LaimonasAuthorizerInvokePermission"
      }
    },
    "LaimonasAuthorizerIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Fn::ImportValue": "LaimonasAuthorizerTestingStack:ExportsOutputRefApiBCFDE45C"
        },
        "IntegrationType": "AWS_PROXY",
        "ConnectionType": "INTERNET",
        "IntegrationMethod": "POST",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:aws:apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "ApiFunctionCE271BD4",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "PayloadFormatVersion": "1.0"
      },
      "Metadata": {
        "aws:cdk:path": "LaimonasAuthorizerTestingStack/AuthorizedEndpointStack/LaimonasAuthorizerIntegration"
      }
    },
    "DummyRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Fn::ImportValue": "LaimonasAuthorizerTestingStack:ExportsOutputRefApiBCFDE45C"
        },
        "RouteKey": "GET /dummy",
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Fn::ImportValue": "LaimonasAuthorizerTestingStack:ExportsOutputRefLaimonasAuthorizerApiKeyCustomAuthorizer95F400CA"
        },
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "LaimonasAuthorizerIntegration"
              }
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "LaimonasAuthorizerTestingStack/AuthorizedEndpointStack/DummyRoute"
      }
    }
  }
}